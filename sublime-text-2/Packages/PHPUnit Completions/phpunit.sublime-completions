{
	"scope": "source.php - variable.other.php",
	"completions":
	[
		"php",
			{ "trigger": "assertArrayHasKey", "contents": "assertArrayHasKey(${1:key}, ${2:array}${3:, '${4:message}'})" },
			{ "trigger": "assertClassHasAttribute", "contents": "assertClassHasAttribute(${1:attributeName}, ${2:className}${3:, '${4:message}'})" },
			{ "trigger": "assertClassHasStaticAttribute", "contents": "assertClassHasStaticAttribute(${1:attributeName}, ${2:className}${3:, '${4:message}'})" },
			{ "trigger": "assertContains", "contents": "assertContains(${1:needle}, ${2:haystack}${3:, '${4:message}'})" },
			{ "trigger": "assertContainsOnly", "contents": "assertContainsOnly(${1:type}, ${2:haystack}${3:, '${4:isNativeType}'}${5:, '${6:message}'})" },
			{ "trigger": "assertContainsOnlyInstancesOf", "contents": "assertContainsOnlyInstancesOf(${1:classname}, ${2:haystack}${3:, '${4:message}'})" },
			{ "trigger": "assertCount", "contents": "assertCount(${1:expectedCount}, ${2:haystack}${3:, '${4:message}'})" },
			{ "trigger": "assertEmpty", "contents": "assertEmpty(${1:actual}${2:, '${3:message}'})" },
			{ "trigger": "assertEqualXMLStructure", "contents": "assertEqualXMLStructure(${1:expectedElement}, ${2:actualElement}${3:, '${4:checkAttributes}'}${5:, '${6:message}'})" },
			{ "trigger": "assertEquals", "contents": "assertEquals(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertFalse", "contents": "assertFalse(${1:actual}${2:, '${3:message}'})" },
			{ "trigger": "assertFileEquals", "contents": "assertFileEquals(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertFileExists", "contents": "assertFileExists(${1:filename}${2:, '${3:message}'})" },
			{ "trigger": "assertGreaterThan", "contents": "assertGreaterThan(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertGreaterThanOrEqual", "contents": "assertGreaterThanOrEqual(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertInstanceOf", "contents": "assertInstanceOf(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertInternalType", "contents": "assertInternalType(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertJsonFileEqualsJsonFile", "contents": "assertJsonFileEqualsJsonFile(${1:expectedFile}, ${2:actualFile}${3:, '${4:message}'})" },
			{ "trigger": "assertJsonStringEqualsJsonFile", "contents": "assertJsonStringEqualsJsonFile(${1:expectedFile}, ${2:actualJson}${3:, '${4:message}'})" },
			{ "trigger": "assertJsonStringEqualsJsonString", "contents": "assertJsonStringEqualsJsonString(${1:expectedJson}, ${2:actualJson}${3:, '${4:message}'})" },
			{ "trigger": "assertLessThan", "contents": "assertLessThan(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertLessThanOrEqual", "contents": "assertLessThanOrEqual(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertNotNull", "contents": "assertNotNull(${1:actual}${2:, '${3:message}'})" },
			{ "trigger": "assertNull", "contents": "assertNull(${1:actual}${2:, '${3:message}'})" },
			{ "trigger": "assertObjectHasAttribute", "contents": "assertObjectHasAttribute(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertRegExp", "contents": "assertRegExp(${1:pattern}, ${2:string}${3:, '${4:message}'})" },
			{ "trigger": "assertStringMatchesFormat", "contents": "assertStringMatchesFormat(${1:format}, ${2:string}${3:, '${4:message}'})" },
			{ "trigger": "assertStringMatchesFormatFile", "contents": "assertStringMatchesFormatFile(${1:formatFile}, ${2:string}${3:, '${4:message}'})" },
			{ "trigger": "assertSame", "contents": "assertSame(${1:expected}, ${2:actual}${3:, '${4:message}'})" },
			{ "trigger": "assertSelectCount", "contents": "assertSelectCount(${1:selector}, ${2:count}$, ${3:actual}{4:, '${5:message}'}{6:, '${7:isHtml}'})" },
			{ "trigger": "assertSelectEquals", "contents": "assertSelectEquals(${1:selector}, ${2:content}, ${3:count}, ${4:actual}${5:, '${6:message}'}${7:, '${8:isHtml}'})" },
			{ "trigger": "assertSelectRegExp", "contents": "assertSelectRegExp(${1:selector}, ${2:pattern}, ${3:count}, ${4:actual}${5:, '${6:message}'}${7:, '${8:isHtml}'})" },
			{ "trigger": "assertStringEndsWith", "contents": "assertStringEndsWith(${1:suffix}, ${2:string}${3:, '${4:message}'})" },
			{ "trigger": "assertStringEqualsFile", "contents": "assertStringEqualsFile(${1:expectedFile}, ${2:actualString}${3:, '${4:message}'})" },
			{ "trigger": "assertStringStartsWith", "contents": "assertStringStartsWith(${1:prefix}, ${2:string}${3:, '${4:message}'})" },
			{ "trigger": "assertTag", "contents": "assertTag(${1:matcher}, ${2:actual}${3:, '${4:message}'}${5:, '${6:isHtml}'})" },
			{ "trigger": "assertThat", "contents": "assertThat(${1:value}, ${2:constraint}${3:, '${4:message}'})" },
			{ "trigger": "assertTrue", "contents": "assertTrue(${1:actual}${2:, '${3:message}'})" },
			{ "trigger": "assertXmlFileEqualsXmlFile", "contents": "assertXmlFileEqualsXmlFile(${1:expectedFile}, ${2:actualFile}${3:, '${4:message}'})" },
			{ "trigger": "assertXmlStringEqualsXmlFile", "contents": "assertXmlStringEqualsXmlFile(${1:expectedFile}, ${2:actualXml}${3:, '${4:message}'})" },
			{ "trigger": "assertXmlStringEqualsXmlString", "contents": "assertXmlStringEqualsXmlString(${1:expectedXml}, ${2:actualXml}${3:, '${4:message}'})" }
	]
}